version: '2.1'

services:

  kong-database:
    image: postgres:9.6.11-alpine
    container_name: kong-database
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    healthcheck:
      test: pg_isready -U kong && psql -d kong -U kong -c "SELECT 1=1"
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5444:5432
  
  kong-migration:
    build: ./kong
    container_name: kong-migration
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
    command: sh -c "(kong migrations up || kong migrations bootstrap) && touch migrations_run && sleep 30"
    healthcheck:
      test: "if [[ -f migrations_run ]] ; then exit 0; else exit 1; fi"
      interval: 10s
      timeout: 5s
      retries: 5
      
  kong:
    build: ./kong
    container_name: kong
    depends_on:
      kong-database:
        condition: service_healthy
      # kong-migration:
        # condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
    healthcheck:
      test: kong health
      interval: 10s
      timeout: 5s
      retries: 5

  konga-database:
    image: mongo:4.1.5
    container_name: konga-database
    volumes:
      - konga_data:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  konga: # log in with admin / adminadminadmin then create a new connection with URL http://kong:8001.
    build: ./konga
    container_name: konga
    depends_on:
      konga-database:
        condition: service_healthy
    volumes:
      - ./konga/user_seed.js:/app/user_seed.js:ro
    ports:
      - 1337:1337
    environment:
      DB_ADAPTER: mongo
      DB_DATABASE: konga
      DB_HOST: konga-database
      KONGA_SEED_USER_DATA_SOURCE_FILE: /app/user_seed.js
      NODE_ENV: production
    restart: on-failure

  rabbitmq:
    container_name: rabbitmq
    build: ./rabbit/
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
  
  spring-boot-ms:
    container_name: spring-boot-ms
    build: ./spring-ms
    depends_on: 
      - "rabbitmq"
    ports:
     - 8079:8080
    
  frontend:
    build: ./frontend
    depends_on:
      - "kong"
    ports:
      - 9999:1443
      
volumes:
  kong_data:
  konga_data:
